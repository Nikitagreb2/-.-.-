class CustomList:
    def __init__(self, size):
        if size <= 0:
            raise ValueError("Размер списка должен быть положительным.")
        self.size = size
        self._list = [0] * size  
        self._write_counter = 0  
        self._read_counter = 0   

    def get_list(self):
        self._read_counter += 1
        return self._list

    def get_write_counter(self):
        return self._write_counter

    def get_read_counter(self):
        return self._read_counter

    def set_item(self, index, value):
        if not (-100 <= value <= 100):
            raise ValueError("Значение должно быть в пределах от -100 до 100.")
        if index < 0 or index >= self.size:
            raise IndexError("Индекс выходит за пределы массива.")
        self._list[index] = value
        self._write_counter += 1

    def get_item(self, index):
        if index < 0 or index >= self.size:
            raise IndexError("Индекс выходит за пределы массива.")
        self._read_counter += 1
        return self._list[index]

    def add_item(self, value):
        if not (-100 <= value <= 100):
            raise ValueError("Значение должно быть в пределах от -100 до 100.")

        self._list.append(value)  
        self.size += 1  
        self._write_counter += 1  

if __name__ == "__main__":
    custom_list = CustomList(5)

    custom_list.set_item(0, 10)
    custom_list.set_item(1, -20)

    custom_list.add_item(30)
    custom_list.add_item(-50)

    print("Список:", custom_list.get_list())

    try:
        custom_list.add_item(200)
    except ValueError as e:
        print(e)

    print("Размер списка:", custom_list.size)
    print("Счётчик записей:", custom_list.get_write_counter())
    print("Счётчик чтений:", custom_list.get_read_counter())
